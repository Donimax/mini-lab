---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-tenant
data:
  tenant.yaml: |
    {{ .Values.masterdata_api.tenants | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-project
data:
  project.yaml: |
    {{ .Values.masterdata_api.projects | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: masterdata-api-tls
type: Opaque
data:
  server-key.pem: {{ .Values.masterdata_api.server_key }}
  server.pem: {{ .Values.masterdata_api.server_cert }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: masterdata-api
spec:
  selector:
    matchLabels:
      app: masterdata-api
  template:
    metadata:
      labels:
        app: masterdata-api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '2112'
    spec:
      containers:
      - name: masterdata-api
        image: {{ .Values.images.masterdata_api.image }}:{{ .Values.images.masterdata_api.tag }}
        imagePullPolicy: Always
        env:
          - name: MASTERDATA_API_SERVERCERT
            value: /certs/server.pem
          - name: MASTERDATA_API_SERVERKEY
            value: /certs/server-key.pem
          - name: MASTERDATA_API_DBHOST
            value: masterdata-db
          - name: MASTERDATA_API_PORT
            value: "8443"
          - name: MASTERDATA_API_HMACKEY
            value: "{{ .Values.masterdata_api.hmac }}"
{{- if .Values.set_resource_limits }}
        resources:
{{ toYaml .Values.resources.masterdata_api | indent 10 }}
{{- end }}
        ports:
        - containerPort: 8443
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8443", "-tls", "-tls-ca-cert=/certs/server.pem", "-tls-server-name=metal-pod.io"]
          initialDelaySeconds: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8443", "-tls", "-tls-ca-cert=/certs/server.pem", "-tls-server-name=metal-pod.io"]
          initialDelaySeconds: 10
        volumeMounts:
        - name: certs
          mountPath: /certs
        - name: initdb-project-volume
          mountPath: /initdb.d/project.yaml
          subPath: project.yaml
        - name: initdb-tenant-volume
          mountPath: /initdb.d/tenant.yaml
          subPath: tenant.yaml
      volumes:
      - name: certs
        secret:
          secretName: masterdata-api-tls
      - name: initdb-project-volume
        configMap:
          name: default-project
      - name: initdb-tenant-volume
        configMap:
          name: default-tenant
---
apiVersion: v1
kind: Service
metadata:
  name: masterdata-api
  labels:
    app: masterdata-api
spec:
  type: ClusterIP
  ports:
  - port: 8443
    targetPort: 8443
  selector:
    app: masterdata-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: masterdata-db
spec:
  selector:
    matchLabels:
      app: masterdata-db
  template:
    metadata:
      labels:
        app: masterdata-db
    spec:
      containers:
      - name: masterdata-db
        image: {{ .Values.images.masterdata_db.image }}:{{ .Values.images.masterdata_db.tag }}
        env:
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_USER
            value: masterdata
          - name: POSTGRES_DB
            value: masterdata
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
{{- if .Values.set_resource_limits }}
        resources:
{{ toYaml .Values.resources.masterdata_db | indent 10 }}
{{- end }}
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres
          mountPath: /var/lib/postgresql/data/
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: masterdata-db
---
apiVersion: v1
kind: Service
metadata:
  name: masterdata-db
  labels:
    app: masterdata-db
spec:
  type: ClusterIP
  ports:
  - port: 5432
  selector:
    app: masterdata-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: masterdata-db
  labels:
    app: masterdata-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
